@model Entities.Models.Trainer
@using Entities.Models

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Public/Views/Shared/_PublicLayout.cshtml";
}
<div class="container">
    <h1></h1>
    <h2>Create a trainer</h2>

    <form method="post">

        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(t => t.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(t => t.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(t => t.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(t => t.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(t => t.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(t => t.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(t => t.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(t => t.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(t => t.Subject, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(t => t.PhotoUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(t => t.PhotoUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(t => t.PhotoUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(t => t.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(t => t.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(t => t.Salary, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(t => t.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(t => t.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(t => t.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-8">
                    <label for="Courses">Select Course</label>
                    <select id="Courses" class="form-control" name="CourseId">

                        @foreach (var course in ViewBag.Courses as List<Course>)
                        {
                            <option value="@course.CourseId">@course.Title - @course.Type</option>

                        }

                    </select>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-8">
                    <input class="btn btn-primary" type="submit" value="Complete" /> | <input id="clearForm" class="btn btn-secondary" type="reset" value="Clear" /> | <b style="color:#7010a3"> @Html.ActionLink("Back to List", "Index")</b>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts{
    <script>
        document.getElementById("#clearForm").reset();

    </script>
}